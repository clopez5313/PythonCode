* input() obtains data from the keyboard.
* if expr:
    xxxx
    xxxx
  elif expr:
    xxxx
    xxxx
  else:
    xxxx
  (SYNTAX FOR CONDITIONALS)
* try:
    xxxx
    xxxx
  except:
    xxxx
    xxxx
  (SYNTAX FOR TRY/CATCH)
* max() returns the biggest element in a list, min() returns the smallest.
* len() returns the number of elements in the object.
* x = int(x), x = float(x) convert the variable into the assigned type.
* 'math' and 'random' need to be imported before used.
* def functionName():
    xxxx
    xxxx
  (SYNTAX TO DEFINE NEW FUNCTIONS)
* Function definitions don't generate any output. Statements within them aren't executed until the function is called.
* while expr:
    xxxx
    xxxx
  (SYNTAX FOR INFINITE LOOPS)
* for x in obj:
    xxxx
    xxxx
  (SYNTAX FOR FINITE LOOPS)
* 'continue' is used to end the current iteration without exiting the while loop. It proceeds with the next iteration.
* word[i:j] retrieves the characters between i and j-1.
* dir() can be used to list the available methods of an object.
* strip() is used to remove the blank spaces at the beginning and the end of a string. rstrip() removes the spaces on the right side of a string.
* %d, %g, and %s can be used to format strings.
 'In %d I got a %g grade on %s.' % (2010,9.5,'math class')
* open(file location) is used to open a file. If it succeeds, a file handle is returned.
* If the size of the file is small enough, it can be read in one string using read().
* find() looks for occurrences of a string within another string. Returns the position of the string or -1 if it wasn't found.
* Protecting the open() call with a Try/Except is a good practice.
* To write a file, it has to be opened like this: open(file location, w). If the file already exists, the contents will be deleted and replaced with
  the new text.
* write() puts the data in the file and returns the number of characters written.
* close() needs to be used when writing files.
